name: 'run: test'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    secrets:
      APP_ID:
        required: true

jobs:
  flutter_codestyle_check:
    name: Flutter codestyle/analyze check
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Check Dart Format
        run: bash scripts/dart_pub_publish_check.sh
      - uses: axel-op/dart-package-analyzer@v3
        id: analysis
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Check scores
        env:
          TOTAL: ${{ steps.analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.analysis.outputs.total_max }}
        run: |
          if (( $TOTAL_MAX - $TOTAL > 20 ))
          then
            echo Pub Score too low.
            exit 1
          fi

  flutter_ut:
    name: Flutter unit test
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Run flutter test
        run: flutter test
        working-directory: test_shard/integration_test_app

  integration_test_android:
    name: Run Flutter Android Integration Tests
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      fail-fast: false
      matrix:
        version: ["3.7.0", "3.24.5"]
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.APP_ID }}
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
          cache: true
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: run flutter android integration tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          arch: x86_64
          profile: pixel_5
          ram-size: 2048M
          heap-size: 4096M
          disk-size: 8192M
          script: bash scripts/run_flutter_integration_test.sh "android"

  integration_test_ios:
    name: Run Flutter iOS Integration Tests
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      fail-fast: false
      matrix:
        version: ["3.7.0", "3.24.5"]
    runs-on: macos-latest
    timeout-minutes: 120
    env:
      TEST_APP_ID: ${{ secrets.APP_ID }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
          cache: true
      - uses: futureware-tech/simulator-action@v3
        with:
          model: 'iPhone 15'
      - run: |
          brew install coreutils
          bash scripts/run_flutter_integration_test.sh "ios"
      - name: Get ios crash logs
        if: always()
        run: |
          sleep 30

          mkdir logs-ios

          CRASH_DIR="${HOME}/Library/Logs/DiagnosticReports/"
          OUTPUT_CRASH_DIR=./logs-ios/crash
          mkdir -p ${OUTPUT_CRASH_DIR}

          # Copy all files
          cp -RP $CRASH_DIR* $OUTPUT_CRASH_DIR || true
        
      - name: Upload ios logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-ios-${{ matrix.version }}
          path: logs-ios/*

  build_android_ubuntu:
    name: Build Android on Ubuntu
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      fail-fast: false
      matrix:
        version: ["3.7.12", "3.24.5"] # Need 3.7.12 to build with Gradle 8.x https://github.com/flutter/flutter/issues/124838
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
          cache: true
      - run: flutter pub get
      - name: Run flutter build apk
        run: flutter build apk
        working-directory: example

  build_android_windows:
    name: Build Android on Windows
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      fail-fast: false
      matrix:
        version: ["3.7.12", "3.24.5"] # Need 3.7.12 to build with Gradle 8.x https://github.com/flutter/flutter/issues/124838
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
          cache: true
      - run: flutter pub get
      - name: Run flutter build apk
        run: flutter build apk
        working-directory: example

  build_ios:
    name: Build iOS
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      fail-fast: false
      matrix:
        version: ["3.7.0"]
    runs-on: macos-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
          cache: true
      - run: flutter pub get
      - name: Run flutter build ios --no-codesign
        run: flutter build ios --no-codesign
        working-directory: example

  # This job aim to cover https://github.com/flutter/flutter/issues/135739
  build_ios_xcode_15:
    name: Build iOS with xcode 15.x
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      matrix:
        version: ["3.24.5"]
    runs-on: macos-13
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
          cache: true
      - run: | # https://github.com/actions/runner-images/issues/6746#issuecomment-1380042553
          # set xcode version to use for build
          sudo xcode-select -switch /Applications/Xcode_15.0.1.app
          # Print used xCode version
          xcode-select -print-path
          xcodebuild -version
      - run: flutter pub get
      - name: Run flutter build ios --no-codesign
        run: flutter build ios --no-codesign
        working-directory: example