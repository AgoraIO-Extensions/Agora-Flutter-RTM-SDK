/// GENERATED BY terra, DO NOT MODIFY BY HAND.

// ignore_for_file: public_member_api_docs, unused_local_variable, unused_import, annotate_overrides

import 'binding_forward_export.dart';
import 'package:iris_method_channel/iris_method_channel.dart';

class RtmHistoryImpl implements RtmHistory {
  RtmHistoryImpl(this.irisMethodChannel);

  final IrisMethodChannel irisMethodChannel;

  @protected
  Map<String, dynamic> createParams(Map<String, dynamic> param) {
    return param;
  }

  @protected
  bool get isOverrideClassName => false;

  @protected
  String get className => 'RtmHistory';

  @override
  Future<int> getMessages(
      {required String channelName,
      required RtmChannelType channelType,
      required GetHistoryMessagesOptions options}) async {
    final apiType =
        '${isOverrideClassName ? className : 'RtmHistory'}_getMessages_e5877fc';
    final param = createParams({
      'channelName': channelName,
      'channelType': channelType.value(),
      'options': options.toJson()
    });
    final List<Uint8List> buffers = [];
    buffers.addAll(options.collectBufferList());
    final callApiResult = await irisMethodChannel.invokeMethod(
        IrisMethodCall(apiType, jsonEncode(param), buffers: buffers));
    if (callApiResult.irisReturnCode < 0) {
      throwExceptionHandler(code: callApiResult.irisReturnCode);
    }
    final rm = callApiResult.data;
    final result = rm['result'];
    if (result < 0) {
      throwExceptionHandler(code: result);
    }
    final getMessagesJson = RtmHistoryGetMessagesJson.fromJson(rm);
    return getMessagesJson.requestId;
  }
}
